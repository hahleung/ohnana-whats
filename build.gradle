buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE'
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1'
        classpath 'io.franzbecker:gradle-lombok:1.10'
//        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

group = 'ohnana'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'io.franzbecker.gradle-lombok'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.sonarqube'
//apply plugin: 'org.junit.platform.gradle.plugin'

compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs += '-parameters'
}

sonarqube {
    properties {
        property 'sonar.projectName', 'ohnana-whats'
        property 'sonar.projectDescription', 'Ohnana Project - Sonar'
        property 'sonar.projectKey', 'ohnana:ohnana-whats'
        property "sonar.sources", "src"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

mainClassName = 'ohnana.Application'

jar {
    baseName = 'ohnana'
    version =  '0.1.0'
}

repositories {
    jcenter()
    mavenCentral()
}

//junitPlatform {
//    filters {
//        engines {
//        }
//        tags {
//            exclude 'slow'
//        }
//    }
//}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'

    compile 'io.sentry:sentry-spring:1.6.3'
    compile 'org.projectlombok:lombok:1.16.18'

//    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.2'
//    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.2'
//    testRuntime 'org.junit.jupiter:junit-jupiter-params:5.0.2'
//    testRuntime 'org.junit.platform:junit-platform-launcher:1.0.2'
//    testCompileOnly 'org.apiguardian:apiguardian-api:1.0.0'
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into "${stageDir}/target"
        }
    }
}

task stopDocker(type: Exec) {
    workingDir '.'
    executable './scripts/stop_docker.sh'
}

task runDocker(type: Exec) {
    dependsOn clean, buildDocker
    workingDir '.'
    executable './scripts/run_docker.sh'
    finalizedBy stopDocker
}

task stopDockerCompose(type: Exec) {
    workingDir '.'
    executable './scripts/stop_docker_compose.sh'
}

task runDockerCompose(type: Exec) {
    dependsOn clean, buildDocker
    workingDir '.'
    executable './scripts/run_docker_compose.sh'
    finalizedBy stopDockerCompose
}
