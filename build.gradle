buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.8.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

group = 'ohnana'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'
apply plugin: 'docker'

mainClassName = 'ohnana.Application'

jar {
    baseName = 'ohnana'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("junit:junit")
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = jar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into "${stageDir}/target"
        }
    }
}

task stopDocker(type: Exec) {
    workingDir '.'
    executable './scripts/stop_docker.sh'
}

task runDocker(type: Exec) {
    dependsOn clean, buildDocker
    workingDir '.'
    executable './scripts/run_docker.sh'
    finalizedBy stopDocker
}

task stopDockerCompose(type: Exec) {
    workingDir '.'
    executable './scripts/stop_docker_compose.sh'
}

task runDockerCompose(type: Exec) {
    dependsOn clean, buildDocker
    workingDir '.'
    executable './scripts/run_docker_compose.sh'
    finalizedBy stopDockerCompose
}
